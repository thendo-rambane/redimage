use serde::Deserialize;
use serde::Serialize;

#[derive(Serialize, Deserialize, Clone, Copy, Debug)]
pub struct Dimensions(i32, i32);
#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct RichTextFlair {
    /** The string representation of the emoji */
    a: Option<String>,
    /** The type of the flair entry */
    e: String,
    /** URL of the emoji image */
    u: Option<String>,
    /** The text content of a text flair */
    t: Option<String>,
}

#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct Subreddit {
    accept_followers: bool,
    accounts_active: Option<i32>,
    accounts_active_is_fuzzed: bool,
    active_user_count: Option<i32>,
    advertiser_category: String,
    all_original_content: bool,
    allow_chat_post_creation: Option<bool>,
    allow_discovery: bool,
    allow_galleries: bool,
    allow_images: bool,
    allow_polls: bool,
    allow_prediction_contributors: bool,
    allow_predictions: bool,
    allow_predictions_tournament: bool,
    allow_videogifs: bool,
    allow_videos: bool,
    banner_background_color: String,
    banner_background_image: String,
    banner_img: Option<String>,
    banner_size: Option<Dimensions>,
    can_assign_link_flair: bool,
    can_assign_user_flair: bool,
    collapse_deleted_comments: bool,
    comment_score_hide_mins: i32,
    community_icon: String,
    community_reviewed: bool,
    created: f32,
    created_utc: f32,
    description: String,
    description_html: Option<String>,
    disable_contributor_requests: bool,
    display_name: String,
    display_name_prefixed: String,
    emojis_custom_size: Option<Dimensions>,
    emojis_enabled: bool,
    free_form_reports: bool,
    has_menu_widget: bool,
    header_img: Option<String>,
    header_size: Option<Dimensions>,
    header_title: Option<String>,
    hide_ads: bool,
    icon_img: String,
    icon_size: Option<Dimensions>,
    id: String,
    is_chat_post_feature_enabled: Option<bool>,
    is_crosspostable_subreddit: Option<bool>,
    is_default_banner: Option<bool>,
    is_default_icon: Option<Vec<bool>>,
    is_enrolled_in_new_modmail: Option<String>,
    key_color: String,
    lang: String,
    link_flair_enabled: bool,
    link_flair_position: String,
    mobile_banner_image: String,
    name: String,
    notification_level: Option<String>,
    original_content_tag_enabled: bool,
    over18: bool,
    prediction_leaderboard_entry_type: String,
    primary_color: String,
    public_description: String,
    public_description_html: Option<String>,
    public_traffic: bool,
    quarantine: bool,
    restrict_commenting: bool,
    restrict_posting: bool,
    should_archive_posts: bool,
    show_media: bool,
    show_media_preview: bool,
    spoilers_enabled: bool,
    submission_type: String,
    submit_link_label: Option<String>,
    submit_text: String,
    submit_text_html: Option<String>,
    submit_text_label: Option<String>,
    subreddit_type: String,
    subscribers: i32,
    suggested_comment_sort: Option<String>,
    title: String,
    url: String,
    user_can_flair_in_sr: Option<String>,
    user_flair_background_color: Option<String>,
    user_flair_css_class: Option<String>,
    user_flair_enabled_in_sr: bool,
    user_flair_position: String,
    user_flair_richtext: Vec<RichTextFlair>,
    user_flair_template_id: Option<String>,
    user_flair_text: Option<String>,
    user_flair_text_color: Option<String>,
    user_flair_type: String,
    user_has_favorited: bool,
    user_is_banned: bool,
    user_is_contributor: bool,
    user_is_moderator: bool,
    user_is_muted: bool,
    user_is_subscriber: bool,
    user_sr_flair_enabled: Option<bool>,
    user_sr_theme_enabled: bool,
    videostream_links_count: Option<i32>,
    whitelist_status: Option<String>,
    wiki_enabled: Option<bool>,
    wls: Option<i32>,
}
